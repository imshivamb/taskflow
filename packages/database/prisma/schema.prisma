// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String
  password String
  streams  Stream[]
}

model Stream {
  id         String      @id @default(uuid())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  trigger    Trigger?
  triggerId  String
  actions    Action[]
  streamRuns StreamRun[]
}

model Trigger {
  id        String            @id @default(uuid())
  streamId  String            @unique
  triggerId String
  metadata  Json              @default("{}")
  stream    Stream            @relation(fields: [streamId], references: [id])
  type      AvailableTrigger? @relation(fields: [triggerId], references: [id])
}

model Action {
  id           String           @id @default(uuid())
  streamId     String
  stream       Stream           @relation(fields: [streamId], references: [id])
  actionId     String
  metadata     Json             @default("{}")
  sortingOrder Int              @default(0)
  type         AvailableAction? @relation(fields: [actionId], references: [id])
}

model AvailableTrigger {
  id       String    @id @default(uuid())
  name     String
  image    String
  triggers Trigger[]
}

model AvailableAction {
  id      String   @id @default(uuid())
  name    String
  image   String
  actions Action[]
}

model StreamRun {
  id                String             @id @default(uuid())
  streamId          String
  metadata          Json
  stream            Stream             @relation(fields: [streamId], references: [id])
  streamRunQueueBox StreamRunQueueBox?
}

model StreamRunQueueBox {
  id          String    @id @default(uuid())
  streamRunId String    @unique
  streamRun   StreamRun @relation(fields: [streamRunId], references: [id])
}
